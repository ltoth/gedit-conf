<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: Archit Baweja <bighead@users.sourceforge.net>
 Copyright (C) 2004 Archit Baweja <bighead@users.sourceforge.net>
 Copyright (C) 2005 Michael Witrant <mike@lepton.fr>
 Copyright (C) 2006 Gabriel Bauman <gbauman@gmail.com>

 This library is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-->
<language id="rjs" _name="RJS" version="2.0" _section="Markup">
	<metadata>
	  <property name="mimetypes">text/x-eruby</property>
	  <property name="globs">*.rjs;*.erjs</property>
      <property name="line-comment-start">#</property>
	</metadata>

  <styles>
    <style id="escape"               _name="Escaped Character"      map-to="def:special-char"/>
    <style id="comment"              _name="Comment"               map-to="def:comment"/>
    <style id="attribute-definition" _name="Attribute Definition"  map-to="def:statement"/>
    <style id="module-handler"       _name="Module handler"        map-to="def:preprocessor"/>
    <style id="keyword"              _name="Keyword"               map-to="def:keyword"/>
    <style id="nil-value"            _name="Nil Constant"          map-to="def:special-constant"/>
    <style id="boolean"              _name="Boolean value"         map-to="def:boolean"/>
    <style id="floating-point"       _name="Floating point number" map-to="def:floating-point"/>
    <style id="decimal"              _name="Decimal number"        map-to="def:decimal"/>
    <style id="base-n-integer"       _name="Base-N number"         map-to="def:base-n-integer"/>
    <style id="numeric-literal"      _name="Numeric literal"       map-to="def:base-n-integer"/>
    <style id="string"               _name="String"                map-to="def:string"/>
    <style id="builtin"              _name="Builtin"               map-to="def:type"/>
    <style id="constant"             _name="Constant"              map-to="def:type"/>
    <style id="symbol"               _name="Symbol"                map-to="def:string"/>
    <style id="special-variable"     _name="Special Variable"      map-to="def:identifier"/>
    <style id="predefined-variable"  _name="Predefined Variable"   map-to="def:identifier"/>
    <style id="variable"             _name="Variable"              map-to="def:identifier"/>
    <style id="here-doc"             _name="Heredoc"               map-to="def:string" />
    <style id="here-doc-bound"       _name="Heredoc Bound"         map-to="def:string"/>
    <style id="regex"                _name="Regular Expression"    map-to="def:identifier"/>
    <!-- Estilo para Rails -->
    <style id="rails"                _name="Rails"                 map-to="rjs:rails"/>

	<!-- Estilo HTML -->
    <style id="comment" _name="Comment" map-to="xml:comment"/>
    <style id="tag" _name="Tag" map-to="xml:element-name"/>
    <style id="attrib-name" _name="Attribute Name" map-to="xml:attribute-name"/>
    <style id="attrib-value" _name="Attribute Value" map-to="xml:attribute-value"/>
    <style id="dtd" _name="DTD" map-to="xml:doctype"/>
    <style id="error" _name="Error" map-to="xml:error"/>

    <!-- Estilo RJS -->
    <style id="rjs"                _name="Rjs"                 map-to="js:rjs"/>

  </styles>

  <definitions>

    <context id="escape" style-ref="escape">
      <match>\\((0-7){3}|(x[a-fA-F0-9]{2})|(c\S)|([CM]-\S)|(M-C-\S)|.)</match>
    </context>

    <context id="multiline-comment" style-ref="comment">
      <start>^=begin</start>
      <end>^=end</end>
      <include>
        <context ref="escape"/>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="attribute-definitions" style-ref="attribute-definition">
      <keyword>attr</keyword>
      <keyword>attr_writer</keyword>
      <keyword>attr_reader</keyword>
      <keyword>attr_accessor</keyword>
    </context>

    <context id="definitions" style-ref="keyword">
      <!-- do not highlight the .class method -->
      <prefix>(?&lt;![\w\.])</prefix>
      <keyword>alias</keyword>
      <keyword>class</keyword>
      <keyword>module</keyword>
      <keyword>def</keyword>
      <keyword>undef</keyword>
    </context>

    <context id="module-handlers" style-ref="module-handler">
      <keyword>require</keyword>
      <keyword>include</keyword>
      <keyword>load</keyword>
    </context>

    <context id="keywords" style-ref="keyword">
      <keyword>BEGIN</keyword>
      <keyword>END</keyword>
      <keyword>and</keyword>
      <keyword>begin</keyword>
      <keyword>break</keyword>
      <keyword>case</keyword>
      <keyword>catch</keyword>
      <keyword>defined?</keyword>
      <keyword>do</keyword>
      <keyword>else</keyword>
      <keyword>elsif</keyword>
      <keyword>end</keyword>
      <keyword>ensure</keyword>
      <keyword>for</keyword>
      <keyword>if</keyword>
      <keyword>in</keyword>
      <keyword>next</keyword>
      <keyword>not</keyword>
      <keyword>or</keyword>
      <keyword>private</keyword>
      <keyword>protected</keyword>
      <keyword>public</keyword>
      <keyword>redo</keyword>
      <keyword>rescue</keyword>
      <keyword>retry</keyword>
      <keyword>return</keyword>
      <keyword>then</keyword>
      <keyword>throw</keyword>
      <keyword>unless</keyword>
      <keyword>until</keyword>
      <keyword>when</keyword>
      <keyword>while</keyword>
      <keyword>yield</keyword>
    </context>

    <context id="builtins" style-ref="builtin">
      <keyword>Array</keyword>
      <keyword>Bignum</keyword>
      <keyword>Binding</keyword>
      <keyword>Class</keyword>
      <keyword>Continuation</keyword>
      <keyword>Dir</keyword>
      <keyword>Exception</keyword>
      <keyword>FalseClass</keyword>
      <keyword>File::Stat</keyword>
      <keyword>File</keyword>
      <keyword>Fixnum</keyword>
      <keyword>Float</keyword>
      <keyword>Hash</keyword>
      <keyword>Integer</keyword>
      <keyword>IO</keyword>
      <keyword>MatchData</keyword>
      <keyword>Method</keyword>
      <keyword>Module</keyword>
      <keyword>NilClass</keyword>
      <keyword>Numeric</keyword>
      <keyword>Object</keyword>
      <keyword>Proc</keyword>
      <keyword>Range</keyword>
      <keyword>Regexp</keyword>
      <keyword>String</keyword>
      <keyword>Struct::Tms</keyword>
      <keyword>Struct</keyword>
      <keyword>Symbol</keyword>
      <keyword>Symbol</keyword>
      <keyword>ThreadGroup</keyword>
      <keyword>Thread</keyword>
      <keyword>Time</keyword>
      <keyword>TrueClass</keyword>
    </context>

    <context id="special-variables" style-ref="special-variable">
      <keyword>self</keyword>
      <keyword>super</keyword>
      <keyword>__FILE__</keyword>
      <keyword>__LINE__</keyword>
    </context>

    <context id="predefined-variables" style-ref="predefined-variable">
      <match extended="true">
        \$([!$&amp;"'*+,./0:;&lt;=&gt;?@\`~1-9]|
           -[0FIKadilpvw]|
           deferr|defout|stderr|stdin|stdout|
           DEBUG|FILENAME|KCODE|LOADED_FEATURES|LOAD_PATH|
           PROGRAM_NAME|SAFE|VERBOSE)\b
      </match>
    </context>

    <context id="global-variables" style-ref="variable">
      <match>\$[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>

    <context id="class-variables" style-ref="variable">
      <match>@@[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>

    <context id="instance-variables" style-ref="variable">
      <match>@[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>

    <context id="symbols" style-ref="symbol">
      <match>(?&lt;!:):[a-zA-Z0-9_]+</match>
    </context>

    <context id="regexp-variables" style-ref="regex">
      <match>\$[1-9][0-9]*</match>
    </context>

    <context id="constants" style-ref="constant">
      <match>(::)?\b[A-Z][A-Za-z0-9_]*\b</match>
    </context>

    <context id="nil-value" style-ref="nil-value">
       <keyword>nil</keyword>
    </context>

    <context id="boolean" style-ref="boolean">
       <keyword>false</keyword>
       <keyword>true</keyword>
    </context>

    <define-regex id="underscore_num">\d(_?\d)*</define-regex>

    <define-regex id="float" extended="true">
      ( (\%{underscore_num})?\.\%{underscore_num} | \%{underscore_num}\. ) |
      ( (\%{underscore_num}|(\%{underscore_num})?\.\%{underscore_num}|\%{underscore_num}\.)[eE][+-]?\%{underscore_num} )
    </define-regex>

    <context id="float" style-ref="floating-point">
      <match>(?&lt;![\w\.])\%{float}(?![\w\.])</match>
    </context>

    <context id="decimal" style-ref="decimal">
      <match>(?&lt;![\w\.])([1-9](_?[0-9])*|0)(?![\w\.])</match>
    </context>

    <context id="hex" style-ref="base-n-integer">
      <match>(?&lt;![\w\.])0[xX][0-9A-Fa-f](_?[0-9A-Fa-f])*(?![\w\.])</match>
    </context>

    <context id="octal" style-ref="base-n-integer">
      <match>(?&lt;![\w\.])0[0-7](_?[0-7])*(?![\w\.])</match>
    </context>

    <context id="binary" style-ref="base-n-integer">
      <match>(?&lt;![\w\.])0[bB][01](_?[01])*(?![\w\.])</match>
    </context>

    <context id="numeric-literal" style-ref="numeric-literal">
      <match>(?&lt;![\w\.])\?((\\[MC]-){1,2}|\\?)\S</match>
    </context>

    <!-- in double quotes and backticks -->
    <context id="simple-interpolation">
      <start>#(?=[@$])</start> <!-- need assertion to not highlight single # -->
      <end></end>
      <include>
        <context ref="class-variables"/>
        <context ref="instance-variables"/>
        <context ref="global-variables"/>
      </include>
    </context>

    <!-- in double quotes and backticks -->
    <!-- FIXME: really would like for the syntax highlight to go back
         to none here, as any ruby code could go here -->
    <context id="complex-interpolation">
      <start>#{</start>
      <end>}</end>
      <include>
        <context ref="rjs:*"/>
      </include>
    </context>

    <!-- ruby strings do not end at line end,
         so we cannot use def:string 
         (parts lifted from perl.lang) -->
    <context id="double-quoted-string" style-ref="string">
      <start>"</start>
      <end>"</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
      </include>
    </context>

    <context id="single-quoted-string" style-ref="string">
      <start>'</start>
      <end>'</end>
      <include>
        <context style-ref="escape">
          <match>\\['\\]</match>
        </context>
      </include>
    </context>

    <context id="backtick-quoted-string" style-ref="string">
      <start>`</start>
      <end>`</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
      </include>
    </context>

    <context id="here-doc-string" style-ref="here-doc" style-inside="true">
      <start>&lt;&lt;(\w+)</start>
      <end>^\%{1@start}</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
      </include>
    </context>

    <context id="here-doc-indented-string" style-ref="here-doc" style-inside="true">
      <start>&lt;&lt;-(\w+)</start>
      <end>^\s*\%{1@start}</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
      </include>
    </context>

    <context id="here-doc-single-quoted-string" style-ref="here-doc" style-inside="true">
      <start>&lt;&lt;'(\w+)'</start>
      <end>^\%{1@start}</end>
      <include>
        <context sub-pattern="0" where="start" style-ref="here-doc-bound"/>
        <context sub-pattern="0" where="end" style-ref="here-doc-bound"/>
      </include>
    </context>

    <context id="here-doc-double-quoted-string" style-ref="here-doc" style-inside="true">
      <start>&lt;&lt;"(\w+)"</start>
      <end>^\%{1@start}</end>
      <include>
        <context sub-pattern="0" where="start" style-ref="here-doc-bound"/>
        <context sub-pattern="0" where="end" style-ref="here-doc-bound"/>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
      </include>
    </context>

    <define-regex id="regex-opts">[iomx]*[neus]?[iomx]*</define-regex>

    <context id="regex-bracketed" style-ref="escape" style-inside="true">
      <start>(?&lt;!\\)[[]</start>
      <end>(?&lt;!\\)]</end>
    </context>

    <context id="regex-alt-form" style-ref="regex">
      <start>\%r\|</start>
      <end>\|\%{regex-opts}</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
        <context ref="regex-bracketed"/>
       </include>
     </context>

    <context id="regex-simple" style-ref="regex">
      <start extended="true">
        ((?&lt;=([(]|\s))|^)
        \/
        (?=
          ([^/\\]*(\\.))*
          [^/]*
          \/
          \%{regex-opts}
          ([),;.]|\s|$)
        )</start>
      <end>\/\%{regex-opts}</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
        <context ref="complex-interpolation"/>
        <context ref="simple-interpolation"/>
        <context ref="regex-bracketed"/>
      </include>
    </context>

    <context id="rjs">
      <include>
        <context ref="def:shebang"/>
        <context ref="def:shell-like-comment"/>
        <context ref="multiline-comment"/>
        <context ref="here-doc-single-quoted-string"/>
        <context ref="here-doc-double-quoted-string"/>
        <context ref="here-doc-string"/>
        <context ref="here-doc-indented-string"/>
        <context ref="double-quoted-string"/>
        <context ref="single-quoted-string"/>
        <context ref="backtick-quoted-string"/>
        <context ref="attribute-definitions"/>
        <context ref="definitions"/>
        <context ref="module-handlers"/>
        <context ref="keywords"/>
        <context ref="builtins"/>
        <context ref="special-variables"/>
        <context ref="predefined-variables"/>
        <context ref="global-variables"/>
        <context ref="class-variables"/>
        <context ref="instance-variables"/>
        <context ref="symbols"/>
        <context ref="regexp-variables"/>
        <!-- <context ref="constants"/> -->
        <context ref="nil-value"/>
        <context ref="boolean"/>
        <context ref="float"/>
        <context ref="decimal"/>
        <context ref="hex"/>
        <context ref="octal"/>
        <context ref="binary"/>
        <context ref="numeric-literal"/>
        <context ref="regex-alt-form"/>
        <context ref="regex-simple"/>
		<!-- Incluir el estilo para Rails -->
        <context ref="keywords-rails"/>

		<!-- Incluir estilo HTML -->
        <context ref="xml:doctype"/>
        <context ref="xml:entity"/>
        <context ref="xml:character-reference"/>
        <context ref="xml:cdata"/>
        <context ref="comment"/>
        <context ref="dtd"/>
        <context ref="script"/>
        <context ref="tag"/>

		<!-- Incluir estilo RJS -->
        <context ref="keywords-rjs"/>

      </include>
    </context>

    <!-- Palabras reservadas de Rails -->
    <context id="keywords-rails" style-ref="rails">
		<keyword>redirect_to</keyword>
		<keyword>ADDITIONAL_LOAD_PATHS</keyword>
		<keyword>ARGF</keyword>
		<keyword>ARGV</keyword>
		<keyword>ActionController</keyword>
		<keyword>ActionView</keyword>
		<keyword>ActiveRecord</keyword>
		<keyword>ArgumentError</keyword>
		<keyword>Array</keyword>
		<keyword>BasicSocket</keyword>
		<keyword>Benchmark</keyword>
		<keyword>Bignum</keyword>
		<keyword>Binding</keyword>
		<keyword>CGI</keyword>
		<keyword>CGIMethods</keyword>
		<keyword>CROSS_COMPILING</keyword>
		<keyword>Class</keyword>
		<keyword>ClassInheritableAttributes</keyword>
		<keyword>Comparable</keyword>
		<keyword>ConditionVariable</keyword>
		<keyword>Config</keyword>
		<keyword>Continuation</keyword>
		<keyword>DRb</keyword>
		<keyword>DRbIdConv</keyword>
		<keyword>DRbObject</keyword>
		<keyword>DRbUndumped</keyword>
		<keyword>Data</keyword>
		<keyword>Date</keyword>
		<keyword>DateTime</keyword>
		<keyword>Delegater</keyword>
		<keyword>Delegator</keyword>
		<keyword>Digest</keyword>
		<keyword>Dir</keyword>
		<keyword>ENV</keyword>
		<keyword>EOFError</keyword>
		<keyword>ERB</keyword>
		<keyword>Enumerable</keyword>
		<keyword>Errno</keyword>
		<keyword>Exception</keyword>
		<keyword>FALSE</keyword>
		<keyword>FalseClass</keyword>
		<keyword>Fcntl</keyword>
		<keyword>File</keyword>
		<keyword>FileList</keyword>
		<keyword>FileTask</keyword>
		<keyword>FileTest</keyword>
		<keyword>FileUtils</keyword>
		<keyword>Fixnum</keyword>
		<keyword>Float</keyword>
		<keyword>FloatDomainError</keyword>
		<keyword>GC</keyword>
		<keyword>Gem</keyword>
		<keyword>GetoptLong</keyword>
		<keyword>Hash</keyword>
		<keyword>IO</keyword>
		<keyword>IOError</keyword>
		<keyword>IPSocket</keyword>
		<keyword>IPsocket</keyword>
		<keyword>IndexError</keyword>
		<keyword>Inflector</keyword>
		<keyword>Integer</keyword>
		<keyword>Interrupt</keyword>
		<keyword>Kernel</keyword>
		<keyword>LN_SUPPORTED</keyword>
		<keyword>LoadError</keyword>
		<keyword>LocalJumpError</keyword>
		<keyword>Logger</keyword>
		<keyword>Marshal</keyword>
		<keyword>MatchData</keyword>
		<keyword>MatchingData</keyword>
		<keyword>Math</keyword>
		<keyword>Method</keyword>
		<keyword>Module</keyword>
		<keyword>Mutex</keyword>
		<keyword>Mysql</keyword>
		<keyword>MysqlError</keyword>
		<keyword>MysqlField</keyword>
		<keyword>MysqlRes</keyword>
		<keyword>NIL</keyword>
		<keyword>NameError</keyword>
		<keyword>NilClass</keyword>
		<keyword>NoMemoryError</keyword>
		<keyword>NoMethodError</keyword>
		<keyword>NoWrite</keyword>
		<keyword>NotImplementedError</keyword>
		<keyword>Numeric</keyword>
		<keyword>OPT_TABLE</keyword>
		<keyword>Object</keyword>
		<keyword>ObjectSpace</keyword>
		<keyword>Observable</keyword>
		<keyword>Observer</keyword>
		<keyword>PGError</keyword>
		<keyword>PGconn</keyword>
		<keyword>PGlarge</keyword>
		<keyword>PGresult</keyword>
		<keyword>PLATFORM</keyword>
		<keyword>PStore</keyword>
		<keyword>ParseDate</keyword>
		<keyword>Precision</keyword>
		<keyword>Proc</keyword>
		<keyword>Process</keyword>
		<keyword>Queue</keyword>
		<keyword>RAKEVERSION</keyword>
		<keyword>RELEASE_DATE</keyword>
		<keyword>RUBY</keyword>
		<keyword>RUBY_PLATFORM</keyword>
		<keyword>RUBY_RELEASE_DATE</keyword>
		<keyword>RUBY_VERSION</keyword>
		<keyword>Rake</keyword>
		<keyword>RakeApp</keyword>
		<keyword>RakeFileUtils</keyword>
		<keyword>Range</keyword>
		<keyword>RangeError</keyword>
		<keyword>Rational</keyword>
		<keyword>Regexp</keyword>
		<keyword>RegexpError</keyword>
		<keyword>Request</keyword>
		<keyword>RuntimeError</keyword>
		<keyword>STDERR</keyword>
		<keyword>STDIN</keyword>
		<keyword>STDOUT</keyword>
		<keyword>ScanError</keyword>
		<keyword>ScriptError</keyword>
		<keyword>SecurityError</keyword>
		<keyword>Signal</keyword>
		<keyword>SignalException</keyword>
		<keyword>SimpleDelegater</keyword>
		<keyword>SimpleDelegator</keyword>
		<keyword>Singleton</keyword>
		<keyword>SizedQueue</keyword>
		<keyword>Socket</keyword>
		<keyword>SocketError</keyword>
		<keyword>StandardError</keyword>
		<keyword>String</keyword>
		<keyword>StringScanner</keyword>
		<keyword>Struct</keyword>
		<keyword>Symbol</keyword>
		<keyword>SyntaxError</keyword>
		<keyword>SystemCallError</keyword>
		<keyword>SystemExit</keyword>
		<keyword>SystemStackError</keyword>
		<keyword>TCPServer</keyword>
		<keyword>TCPSocket</keyword>
		<keyword>TCPserver</keyword>
		<keyword>TCPsocket</keyword>
		<keyword>TOPLEVEL_BINDING</keyword>
		<keyword>TRUE</keyword>
		<keyword>Task</keyword>
		<keyword>Text</keyword>
		<keyword>Thread</keyword>
		<keyword>ThreadError</keyword>
		<keyword>ThreadGroup</keyword>
		<keyword>Time</keyword>
		<keyword>Transaction</keyword>
		<keyword>TrueClass</keyword>
		<keyword>TypeError</keyword>
		<keyword>UDPSocket</keyword>
		<keyword>UDPsocket</keyword>
		<keyword>UNIXServer</keyword>
		<keyword>UNIXSocket</keyword>
		<keyword>UNIXserver</keyword>
		<keyword>UNIXsocket</keyword>
		<keyword>UnboundMethod</keyword>
		<keyword>Url</keyword>
		<keyword>VERSION</keyword>
		<keyword>Verbose</keyword>
		<keyword>YAML</keyword>
		<keyword>ZeroDivisionError</keyword>
		<keyword>action</keyword>
		<keyword>attributes</keyword>
		<keyword>application2</keyword>
		<keyword>@base_path</keyword>
		<keyword>connection</keyword>
		<keyword>dispatcher</keyword>
		<keyword>display1</keyword>
		<keyword>format</keyword>
		<keyword>key</keyword>
		<keyword>layout</keyword>
		<keyword>load</keyword>
		<keyword>link</keyword>
		<keyword>notify</keyword>
		<keyword>open</keyword>
		<keyword>quote</keyword>
		<keyword>render</keyword>
		<keyword>request</keyword>
		<keyword>records</keyword>
		<keyword>responses</keyword>
		<keyword>send</keyword>
		<keyword>session</keyword>
		<keyword>system</keyword>
		<keyword>template</keyword>
		<keyword>test</keyword>
		<keyword>timeout</keyword>
		<keyword>to_s</keyword>
		<keyword>type</keyword>
		<keyword>URI</keyword>
		<keyword>Observer</keyword>

		<keyword>belongs_to</keyword>
		<keyword>has_one</keyword>
		<keyword>has_many</keyword>
		<keyword>has_and_belongs_to_many</keyword>
		<keyword>validates_presence_of</keyword>
		<keyword>validates_length_of</keyword>
		<keyword>validates_acceptance_of</keyword>
		<keyword>validates_confirmation_of</keyword>
		<keyword>validates_uniqueness_of</keyword>
		<keyword>validates_format_of</keyword>
		<keyword>validates_numericality_of</keyword>
		<keyword>validates_inclusion_in</keyword>
		<keyword>validates_exclusion_of</keyword>
		<keyword>validates_associated</keyword>
		<keyword>before_create</keyword>
		<keyword>before_destroy</keyword>
		<keyword>before_filter</keyword>
		<keyword>cookies</keyword>
    </context>

	<!-- Codigo HTML -->
        <!-- Html comments are more permissive than xml comments -->
        <context id="comment" style-ref="comment">
            <start>&lt;!--</start>
            <end>--\s*&gt;</end>
            <include>
                <context ref="def:in-comment"/>
            </include>
        </context>

        <context id="dtd" style-ref="dtd">
            <start>&lt;!</start>
            <end>&gt;</end>
        </context>

        <!-- This is a placeholder context intended to be <replace>d
             in languages like php that need to embedd contexts inside
             html tags and attributes.
        -->
        <context id="embedded-lang-hook">
            <start>&lt;%{def:never-match}</start>
            <end>%&gt;</end>
        </context>

        <context id="generic-tag">
            <include>

                <!-- Attribute in the form: name="value" -->
                <context id="attrib-quoted" style-ref="attrib-name">
                    <start extended="true">
                        [A-Za-z0-9:_-]+ # attribute name
                        \s*=\s*         # "="
                        (\")            # string beginning
                    </start>
                    <end>\"</end>
                    <include>
                        <context sub-pattern="1" where="start" style-ref="attrib-value"/>
                        <context sub-pattern="0" where="end" style-ref="attrib-value"/>
                        <context id="string" extend-parent="false" end-at-line-end="true" style-ref="attrib-value">
                            <start>\%{def:always-match}</start>
                            <include>
                                <context ref="xml:entity"/>
                                <context ref="xml:character-reference"/>
                                <context ref="embedded-lang-hook"/>
                            </include>
                        </context>
                    </include>
                </context>

                <!-- Attribute in the form: name=value -->
                <context id="attrib-unquoted" style-ref="attrib-value">
                    <start extended="true">
                        [a-z0-9:_-]+ # attribute name
                        \s*=\s*      # "="
                    </start>
                    <end>(?=&gt;|\s)</end>
                    <include>
                        <context sub-pattern="0" where="start" style-ref="attrib-name"/>
                        <context ref="xml:entity"/>
                        <context ref="xml:character-reference"/>
                    </include>
                </context>

                <!-- Attribute in the form: name -->
                <context id="attrib-no-value" style-ref="attrib-name">
                    <match extended="true">
                        [a-z0-9:_-]+  # attribute name
                    </match>
                </context>

                <context ref="embedded-lang-hook"/>

            </include>
        </context>

        <context id="script">
            <start>&lt;\s*script\%]</start>
            <end>&lt;\s*/\s*script\s*&gt;</end>

            <include>
                <context sub-pattern="0" where="start" style-ref="tag"/>
                <context sub-pattern="0" where="end" style-ref="tag"/>
                <context ref="generic-tag"/>
                <context id="js-code" extend-parent="false">
                    <start>&gt;</start>
                    <include>
                        <context sub-pattern="0" where="start" style-ref="tag"/>
                        <context ref="js:js"/>
                    </include>
                </context>
            </include>
        </context>

        <context id="tag">
            <start>&lt;\s*/?\s*[a-z0-9_-]+</start>
            <end>/?\s*&gt;</end>
            <include>
                <context sub-pattern="0" where="start" style-ref="tag"/>
                <context sub-pattern="0" where="end" style-ref="tag"/>
                <context ref="generic-tag"/>
            </include>
        </context>

	<!-- Codigo RJS -->
    <context id="keywords-rjs" style-ref="rjs">
		<keyword>select</keyword>
		<keyword>insert_html</keyword>
		<keyword>replace_html</keyword>
		<keyword>replace</keyword>
		<keyword>remove</keyword>
		<keyword>hide</keyword>
		<keyword>show</keyword>
		<keyword>toggle</keyword>
		<keyword>alert</keyword>
		<keyword>redirect_to</keyword>
		<keyword>call</keyword>
		<keyword>assign</keyword>
		<keyword>delay</keyword>
		<keyword>visual_effect</keyword>
		<keyword>sortable</keyword>
		<keyword>dragable</keyword>
		<keyword>drop_recieving</keyword>
	</context>

  </definitions>
</language>
